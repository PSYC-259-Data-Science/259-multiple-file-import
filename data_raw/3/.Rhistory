library(randomForest)
library(randomForestExplainer)
library(dplyr)
library(caret)
library(reprtree)
library(readr)
ds <- read_csv("classification.txt")
ds$time <- as.numeric(row.names(ds))
# ds = subset(ds, ds$class_prop == 1 | ds$half == 1) #Only full windows for training
# ds = subset(ds, ds$class_prop == 1) #Only full windows for both
ds = subset(ds, ds$class %in% c(3,5,6,7,10)) #Only classes with enough data
ds$classe <- ds$class
ds = subset(ds, select = -c(1,2,3) )
ds$classe <- factor(ds$classe,levels = c(3,5,6,7,10),labels = c("prone", "held_walk","held_stat","sit_surf","sit_rest"))
intrain <- createDataPartition(y = ds$classe, p = .65, list = FALSE)
training <- ds[intrain,]
testing <- ds[-intrain,]
# training <- subset(ds, ds$half == 0)
# testing <- subset(ds, ds$half == 1)
rfmodel <- randomForest(classe ~ ., data = training, localImp = TRUE, proximity = TRUE,na.action=na.roughfix, ntree = 50)
predictions <- predict(rfmodel, testing, type = "class")
confusionMatrix(table(predictions, testing$classe))
ds <- read_csv("classification.txt")
ds$time <- as.numeric(row.names(ds))
# ds = subset(ds, ds$class_prop == 1 | ds$half == 1) #Only full windows for training
# ds = subset(ds, ds$class_prop == 1) #Only full windows for both
ds = subset(ds, ds$class %in% c(3,5,6,7,9,10)) #Only classes with enough data
ds$classe <- ds$class
ds = subset(ds, select = -c(1,2,3) )
ds$classe <- factor(ds$classe,levels = c(3,5,6,7,9,10),labels = c("prone", "held_walk","held_stat","sit_surf","sit_rest","supine"))
intrain <- createDataPartition(y = ds$classe, p = .65, list = FALSE)
training <- ds[intrain,]
testing <- ds[-intrain,]
# training <- subset(ds, ds$half == 0)
# testing <- subset(ds, ds$half == 1)
rfmodel <- randomForest(classe ~ ., data = training, localImp = TRUE, proximity = TRUE,na.action=na.roughfix, ntree = 50)
predictions <- predict(rfmodel, testing, type = "class")
confusionMatrix(table(predictions, testing$classe))
confusionMatrix(table(predictions, testing$classe))
ds <- read_csv("classification.txt")
ds$time <- as.numeric(row.names(ds))
# ds = subset(ds, ds$class_prop == 1 | ds$half == 1) #Only full windows for training
# ds = subset(ds, ds$class_prop == 1) #Only full windows for both
ds = subset(ds, ds$class %in% c(3,5,6,7,9,10)) #Only classes with enough data
ds$classe <- ds$class
ds = subset(ds, select = -c(1,2,3) )
ds$classe <- factor(ds$classe,levels = c(3,5,6,7,9,10),labels = c("prone", "held_walk","held_stat","sit_surf","sit_rest","supine"))
intrain <- createDataPartition(y = ds$classe, p = .65, list = FALSE)
training <- ds[intrain,]
testing <- ds[-intrain,]
# training <- subset(ds, ds$half == 0)
# testing <- subset(ds, ds$half == 1)
rfmodel <- randomForest(classe ~ ., data = training, localImp = TRUE, proximity = TRUE,na.action=na.roughfix, ntree = 50)
predictions <- predict(rfmodel, testing, type = "class")
confusionMatrix(table(predictions, testing$classe))
library(randomForest)
library(randomForestExplainer)
library(dplyr)
library(caret)
library(reprtree)
library(readr)
ds <- read_csv("classification1.txt")
ds$time <- as.numeric(row.names(ds))
# ds = subset(ds, ds$class_prop == 1 | ds$half == 1) #Only full windows for training
# ds = subset(ds, ds$class_prop == 1) #Only full windows for both
ds = subset(ds, ds$class %in% c(3,5,6,7,9,10)) #Only classes with enough data
ds$classe <- ds$class
ds = subset(ds, select = -c(1,2,3) )
ds$classe <- factor(ds$classe,levels = c(3,5,6,7,9,10),labels = c("prone", "held_walk","held_stat","sit_surf","sit_rest","supine"))
training <- ds
ds <- read_csv("classification2.txt")
ds$time <- as.numeric(row.names(ds))
# ds = subset(ds, ds$class_prop == 1 | ds$half == 1) #Only full windows for training
# ds = subset(ds, ds$class_prop == 1) #Only full windows for both
ds = subset(ds, ds$class %in% c(3,5,6,7,9,10)) #Only classes with enough data
ds$classe <- ds$class
ds = subset(ds, select = -c(1,2,3) )
ds$classe <- factor(ds$classe,levels = c(3,5,6,7,9,10),labels = c("prone", "held_walk","held_stat","sit_surf","sit_rest","supine"))
testing <- ds
# training <- subset(ds, ds$half == 0)
# testing <- subset(ds, ds$half == 1)
rfmodel <- randomForest(classe ~ ., data = training, localImp = TRUE, proximity = TRUE,na.action=na.roughfix, ntree = 50)
predictions <- predict(rfmodel, testing, type = "class")
confusionMatrix(table(predictions, testing$classe))
ds <- read_csv("classification1.txt")
pwd
ds <- read_csv("classification1.txt")
cs ..
ls
