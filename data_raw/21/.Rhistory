dsl$cue <- factor(dsl$cue, levels =c("AUC_sal","AUC_dist","AUC_comb"),labels = c("Saliency", "Centering","Combined"))
dsl <- dsl[complete.cases(dsl),]
dsl <- subset(dsl, dsl$id %in% good_ids)
dsl <- subset(dsl, dsl$inview == "Overall")
#dsl <- subset(dsl, dsl$age_years < 17)
#dsl <- subset(dsl, dsl$AUC > .55)
dsl$hours_tv_num <- ppt[match(dsl$id, ppt$id),"hours_tv_num"]
dsl$hours_tv_num <- dsl$hours_tv_num$hours_tv_num
dsl$hours_tv_num[dsl$hours_tv_num == .25] <-  1
tv_labels <- c("None","<1 hr","1 hr", "2 hr","3 hr", "4 hr", "5 hr", "> 6 hr")
dsl$hours_tv_num <- factor(dsl$hours_tv_num, levels = c(0,1,2,3,4,5,6,7), labels = tv_labels)
dsl <- subset(dsl, !is.na(dsl$hours_tv_num))
res <- dsl %>%
split(.$cue) %>%
map(~ lm(AUC_centered ~ lnage + hours_tv_num, data = .))
res %>% map(~ anova(.))
res %>% map(~ summary(.))
ggplot(data = subset(dsl, dsl$age_years < 17), aes(x = hours_tv_num, y = AUC)) +
geom_point(aes(color = age_group), size = 4) +
geom_smooth(method = lm, formula = y ~ x, aes(x = as.numeric(hours_tv_num), color = age_group), se = F, size = 2) +
scale_color_manual(name = "Age group", values = cbp1[c(2,3,4,1)]) +
xlab("Daily television exposure") +
ylab("Predictiveness of cue (AUC)") +
facet_wrap(~ cue, nrow = 1) + theme(legend.position = "bottom") +
my_theme
tv_labels <- c("None","<1hr","1hr", "2hr","3hr", "4hr", "5hr", ">6hr")
dsl$hours_tv_num <- factor(dsl$hours_tv_num, levels = c(0,1,2,3,4,5,6,7), labels = tv_labels)
dsl <- subset(dsl, !is.na(dsl$hours_tv_num))
res <- dsl %>%
split(.$cue) %>%
map(~ lm(AUC_centered ~ lnage + hours_tv_num, data = .))
res %>% map(~ anova(.))
res %>% map(~ summary(.))
ggplot(data = subset(dsl, dsl$age_years < 17), aes(x = hours_tv_num, y = AUC)) +
ggplot(data = subset(dsl, dsl$age_years < 17), aes(x = hours_tv_num, y = AUC)) +
geom_point(aes(color = age_group), size = 4) +
geom_smooth(method = lm, formula = y ~ x, aes(x = as.numeric(hours_tv_num), color = age_group), se = F, size = 2) +
scale_color_manual(name = "Age group", values = cbp1[c(2,3,4,1)]) +
xlab("Daily television exposure") +
ylab("Predictiveness of cue (AUC)") +
facet_wrap(~ cue, nrow = 1) + theme(legend.position = "bottom") +
my_theme
ggplot(data = subset(dsl, dsl$age_years < 17), aes(x = hours_tv_num, y = AUC)) +
geom_point(aes(color = age_group), size = 4) +
geom_smooth(method = lm, formula = y ~ x, aes(x = as.numeric(hours_tv_num), color = age_group), se = F, size = 2) +
scale_color_manual(name = "Age group", values = cbp1[c(2,3,4,1)]) +
xlab("Daily television exposure") +
ylab("Predictiveness of cue (AUC)") +
facet_wrap(~ cue, nrow = 1) + theme(legend.position = "bottom") +
my_theme
dsl <- gather(ds, cue, AUC, AUC_sal, AUC_dist, AUC_comb, factor_key = T)
dsl$cue <- factor(dsl$cue, levels =c("AUC_sal","AUC_dist","AUC_comb"),labels = c("Saliency", "Centering","Combined"))
dsl <- dsl[complete.cases(dsl),]
dsl <- subset(dsl, dsl$id %in% good_ids)
dsl <- subset(dsl, dsl$inview == "Overall")
#dsl <- subset(dsl, dsl$age_years < 17)
#dsl <- subset(dsl, dsl$AUC > .55)
dsl$hours_tv_num <- ppt[match(dsl$id, ppt$id),"hours_tv_num"]
dsl$hours_tv_num <- dsl$hours_tv_num$hours_tv_num
dsl$hours_tv_num[dsl$hours_tv_num == .25] <-  1
tv_labels <- c("None","<1hr","1hr", "2hr","3hr", "4hr", "5hr", ">6hr")
dsl$hours_tv_num <- factor(dsl$hours_tv_num, levels = c(0,1,2,3,4,5,6,7), labels = tv_labels)
dsl <- subset(dsl, !is.na(dsl$hours_tv_num))
res <- dsl %>%
split(.$cue) %>%
map(~ lm(AUC_centered ~ lnage + hours_tv_num, data = .))
res %>% map(~ anova(.))
res %>% map(~ summary(.))
ggplot(data = subset(dsl, dsl$age_years < 17), aes(x = hours_tv_num, y = AUC)) +
geom_point(aes(color = age_group), size = 4) +
geom_smooth(method = lm, formula = y ~ x, aes(x = as.numeric(hours_tv_num), color = age_group), se = F, size = 2) +
scale_color_manual(name = "Age group", values = cbp1[c(2,3,4,1)]) +
xlab("Daily television exposure") +
ylab("Predictiveness of cue (AUC)") +
facet_wrap(~ cue, nrow = 1) + theme(legend.position = "bottom") +
my_theme
ggplot(data = subset(dsl, dsl$age_years < 17), aes(x = hours_tv_num, y = AUC)) +
geom_point(aes(color = age_group), size = 4) +
geom_smooth(method = lm, formula = y ~ x, aes(x = as.numeric(hours_tv_num), color = age_group), se = F, size = 2) +
scale_color_manual(name = "Age group", values = cbp1[c(2,3,4,1)]) +
xlab("Daily television exposure") +
ylab("AUC") +
facet_wrap(~ cue, nrow = 1) + theme(legend.position = "bottom") +
my_theme
library(multcomp)
library(lsmeans)
library(tidyverse)
library(effects)
library(lme4)
library(lmerTest)
library(gridExtra)
library(rcompanion)
library(psych)
cbp1 <- c("#999999", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
my_theme <-   theme(text = element_text(size = 20),
axis.text.x = element_text(size = 20, color = "black"), axis.title.x = element_text(size = 24),
axis.text.y = element_text(size = 20,  color = "black"), axis.title.y = element_text(size = 24),
panel.background = element_blank(),panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "white"))
dsl <-  gather(ds, key = "cond", value = "stdev", "posx_std","posy_std","eyex_std","eyey_std")
dsl$eyehead <- factor(ifelse(is.na(str_extract(dsl$cond,"eye")),"head","eye"))
dsl$dim <- factor(ifelse(is.na(str_extract(dsl$cond,"x")),"y","x"))
dsl <- filter(dsl, dim == "x")
dsl %>% filter(win <= 30) %>% split(.$task) %>%
map(~ lmer(stdev ~ eyehead * path_speed * straightness + (1|id) + (1|win),.))  ->> res
lapply(res, function(x) anova(x))
res_search <- res$search
sjPlot::plot_model(res_search)
ds <- read_csv("~/Dropbox/LSS/window_stats.csv", na = "NaN")
ds <- mutate(ds, id = factor(id))
ds$task <- factor(ds$task,levels = c(1,2),labels = c("walk","search"))
ds <- filter(ds, id != 212) #What about 210?
# LONG FORMAT GPS COVARIATES --------------
dsl <-  gather(ds, key = "cond", value = "stdev", "posx_std","posy_std","eyex_std","eyey_std")
dsl$eyehead <- factor(ifelse(is.na(str_extract(dsl$cond,"eye")),"head","eye"))
dsl$dim <- factor(ifelse(is.na(str_extract(dsl$cond,"x")),"y","x"))
dsl <- filter(dsl, dim == "x")
dsl %>% filter(win <= 30) %>% split(.$task) %>%
map(~ lmer(stdev ~ eyehead * path_speed * straightness + (1|id) + (1|win),.))  ->> res
lapply(res, function(x) anova(x))
res_search <- res$search
sjPlot::plot_model(res_search)
sjPlot::plot_model(res_search, type = "pre")
sjPlot::plot_model(res_search, type = "pre", terms = c("eyehead", "path_speed"))
sjPlot::plot_model(res_search, type = "pre", terms = c("eyehead", "straightness"))
library(sjPlot)
plot_model(res_search, type = "int", terms = c("eyehead", "path_speed"))
plot_model(res_search, type = "eff", terms = c("eyehead", "path_speed"))
plot_model(res_search, type = "slope", terms = c("eyehead", "path_speed"))
plot_model(res_search, type = "int", terms = c("eyehead", "path_speed"))
plot_model(res_search, type = "int")
plot_model(res_search, type = "int")
dsl %>% filter(win <= 30) %>% split(.$task) %>%
map(~ lmer(stdev ~ eyehead * path_speed + (1|id) + (1|win),.))  ->> res
dsl %>% filter(win <= 30) %>% split(.$task) %>%
map(~ lmer(stdev ~ eyehead * path_speed + (1|id) + (1|win),.))  ->> res
lapply(res, function(x) anova(x))
res_search <- res$search
plot_model(res_search, type = "int")
plot_model(res_search, type = "re")
dsl %>% filter(win <= 30) %>% split(.$task) %>%
map(~ lmer(stdev ~ eyehead * straightness + (1|id) + (1|win),.))  ->> res
lapply(res, function(x) anova(x))
res_search <- res$search
plot_model(res_search, type = "int")
boxplot(ds$straightness)
boxplot(ds$path_speed)
dsl %>% filter(win <= 30) %>%
map(~ lmer(stdev ~ eyehead * task * path_speed + (1|id) + (1|win),.))  ->> res
dsl %>% filter(win <= 30) %>%
map(~ lmer(stdev ~ eyehead * task * path_speed + (1|id) + (1|win),.))  -> res
dsl <-  gather(ds, key = "cond", value = "stdev", "posx_std","posy_std","eyex_std","eyey_std")
dsl$eyehead <- factor(ifelse(is.na(str_extract(dsl$cond,"eye")),"head","eye"))
dsl$dim <- factor(ifelse(is.na(str_extract(dsl$cond,"x")),"y","x"))
dsl <- filter(dsl, dim == "x")
dsl %>% filter(win <= 30) %>%
map(~ lmer(stdev ~ eyehead * task * path_speed + (1|id) + (1|win),.))  -> res
dsl %>% filter(win <= 30) %>%
map(~ lmer(stdev ~ eyehead * task * path_speed + (1|id) + (1|win),.))  ->> res
dsl %>% filter(win <= 30) %>%
lmer(stdev ~ eyehead * task * path_speed + (1|id) + (1|win),.)  -> res
lapply(res, function(x) anova(x))
anova(res)
plot_model(res, type = "int")
dsl %>% filter(win <= 30) %>%
lmer(stdev ~ eyehead * task * path_speed + (win|id),.)  -> res
dsl %>% filter(win <= 30) %>%
lmer(stdev ~ eyehead * task * path_speed + (id|win),.)  -> res
library(multcomp)
library(lsmeans)
library(tidyverse)
library(effects)
library(lme4)
library(lmerTest)
library(gridExtra)
library(rcompanion)
library(psych)
cbp1 <- c("#999999", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
my_theme <-   theme(text = element_text(size = 20),
axis.text.x = element_text(size = 20, color = "black"), axis.title.x = element_text(size = 24),
axis.text.y = element_text(size = 20,  color = "black"), axis.title.y = element_text(size = 24),
panel.background = element_blank(),panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "white"))
# CREATE DATA SET ---------------------------------------------------------------
#ds <- read_csv("~/Dropbox/LSS/summary_stats.csv", na = "NaN") #don't use this one, doesn't have the right motion data
ds <- read_csv("~/Dropbox/LSS/summary_stats_mot.csv", na = "NaN")
ds <- mutate(ds, id = factor(id))
ds <- filter(ds, id != 212)
View(ds)
describe(ds[,c("walk_bothcent", "walk_eyecent","walk_headcent","walk_nocent_samedir","walk_nocent_oppdir")], na.rm = T)
library(multcomp)
library(lsmeans)
library(tidyverse)
library(effects)
library(lme4)
library(lmerTest)
library(gridExtra)
library(rcompanion)
library(psych)
cbp1 <- c("#999999", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
my_theme <-   theme(text = element_text(size = 20),
axis.text.x = element_text(size = 20, color = "black"), axis.title.x = element_text(size = 24),
axis.text.y = element_text(size = 20,  color = "black"), axis.title.y = element_text(size = 24),
panel.background = element_blank(),panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "white"))
# CREATE DATA SET ---------------------------------------------------------------
#ds <- read_csv("~/Dropbox/LSS/summary_stats.csv", na = "NaN") #don't use this one, doesn't have the right motion data
ds <- read_csv("~/Dropbox/LSS/summary_stats_mot.csv", na = "NaN")
ds <- mutate(ds, id = factor(id))
ds <- filter(ds, id != 212)
describe(ds[,c("walk_bothcent", "walk_eyecent","walk_headcent","walk_nocent_samedir","walk_nocent_oppdir")], na.rm = T)
describe(ds[,c("search_bothcent", "search_eyecent","search_headcent","search_nocent_samedir","search_nocent_oppdir")], na.rm = T)
t.test(ds$walk_nocent_samedir, ds$search_nocent_samedir, paired = T)
t.test(ds$walk_nocent_oppdir, ds$search_nocent_oppdir, paired = T)
ds %>% gather(key = "cond", value = "prop", "walk_bothcent", "walk_eyecent","walk_headcent","walk_nocent_samedir","walk_nocent_oppdir","search_bothcent", "search_eyecent","search_headcent","search_nocent_samedir","search_nocent_oppdir") -> dsl_prop
dsl_prop$task <- factor(ifelse(is.na(str_extract(dsl_prop$cond,"search")),"Walk","Search"),levels = c("Walk","Search"))
dsl_prop$nocent_samedir <- ifelse(is.na(str_extract(dsl_prop$cond,"nocent_samedir")),0,1)
dsl_prop$nocent_oppdir <- ifelse(is.na(str_extract(dsl_prop$cond,"nocent_oppdir")),0,2)
dsl_prop$headcent <- ifelse(is.na(str_extract(dsl_prop$cond,"headcent")),0,3)
dsl_prop$eyecent <- ifelse(is.na(str_extract(dsl_prop$cond,"eyecent")),0,4)
dsl_prop$bothcent <- ifelse(is.na(str_extract(dsl_prop$cond,"bothcent")),0,5)
dsl_prop$Movement <- dsl_prop$nocent + dsl_prop$headcent + dsl_prop$eyecent + dsl_prop$bothcent
dsl_prop$Movement <- factor(dsl_prop$Movement, levels = c(1,2,3,4,5), labels = c("Both moved together","Both moved opposite", "Only eyes", "Only head", "Neither moved"))
dsl_prop %>% group_by(Movement, task) %>% summarise(prop = mean(prop)) %>%
ggplot(aes(y = prop, fill = Movement, x = task)) +
geom_bar(stat = "identity") +
geom_label(aes(label = sprintf("%0.1f%%", round(prop*100, digits = 1))),size = 3, position = position_stack(vjust = 0.5), show.legend = F) +
xlab("") + ylab("Prop. of time") +
my_theme
dsl_prop$Movement <- dsl_prop$nocent_samedir + dsl_prop$nocent_oppdir + dsl_prop$headcent + dsl_prop$eyecent + dsl_prop$bothcent
dsl_prop$Movement <- factor(dsl_prop$Movement, levels = c(1,2,3,4,5), labels = c("Both moved together","Both moved opposite", "Only eyes", "Only head", "Neither moved"))
dsl_prop %>% group_by(Movement, task) %>% summarise(prop = mean(prop)) %>%
ggplot(aes(y = prop, fill = Movement, x = task)) +
geom_bar(stat = "identity") +
geom_label(aes(label = sprintf("%0.1f%%", round(prop*100, digits = 1))),size = 3, position = position_stack(vjust = 0.5), show.legend = F) +
xlab("") + ylab("Prop. of time") +
my_theme
dsl <-  gather(ds, key = "cond", value = "speed", "walk_posx_speed","search_posx_speed","walk_posy_speed","search_posy_speed","walk_eyex_speed","search_eyex_speed","walk_eyey_speed","search_eyey_speed")
dsl$eyehead <- factor(ifelse(is.na(str_extract(dsl$cond,"eye")),"head","eye"))
dsl$dim <- factor(ifelse(is.na(str_extract(dsl$cond,"x")),"y","x"))
dsl$task <- factor(ifelse(is.na(str_extract(dsl$cond,"walk")),"search","walk"))
res <- lmer(speed ~ eyehead*task*dim + (1|id),data = dsl)
anova(res)
y
dsl %>% group_by(dim, eyehead, task) %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(aes(y = Speed, x = task, color = eyehead, ymin = ymin, ymax = ymax)) +
geom_pointrange(size = 1.5) + facet_wrap(~dim) + my_theme
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
geom_pointrange(size = 1.5) + my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax)) +
geom_point(data = dsl, aes(y = Speed, x = eyehead, color = task)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
geom_pointrange(size = 1.5) + my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax)) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
geom_pointrange(size = 1.5) + my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax)) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
geom_pointrange(size = 1.5) + my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax)) + geom_pointrange(size = 1.5) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax)) +
geom_pointrange(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax), size = 1.5) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_pointrange(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax), size = 1.5) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_pointrange(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax), size = 1.5) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task), fill = "black") +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_pointrange(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax), size = 1.5) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task), fill = "black", shape = 21) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_pointrange(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax), size = 1.5, , fill = "black", shape = 21) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task)) +
geom_pointrange(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax), size = 1.5, fill = "black", shape = 21) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task), position = position_dodge(.2)) +
geom_pointrange(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax), size = 1.5, fill = "black", shape = 21) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task), position = position_dodge(.2)) +
geom_pointrange(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax), size = 1.5, fill = "black", shape = 21, position = position_dodge(.2)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task), position = position_dodge(.2)) +
geom_pointrange(aes(y = Speed, x = eyehead, fill = task, ymin = ymin, ymax = ymax), size = 1.5, color = "black", shape = 21, position = position_dodge(.2)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task), position = position_dodge(.2)) +
geom_crossbar(aes(y = Speed, x = eyehead, fill = task, ymin = ymin, ymax = ymax), size = 1.5, color = "black", shape = 21, position = position_dodge(.2)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task), position = position_dodge(.2)) +
geom_crossbar(aes(y = Speed, x = eyehead, fill = task, ymin = ymin, ymax = ymax), size = 1.5, color = "black", width = .2, position = position_dodge(.2)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task), position = position_dodge(.2)) +
geom_crossbar(aes(y = Speed, x = eyehead, fill = task, ymin = ymin, ymax = ymax), color = "black", width = .2, position = position_dodge(.2)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task), position = position_dodge(.2)) +
geom_crossbar(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax), width = .2, position = position_dodge(.2)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "y") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_point(data = dsl, aes(y = speed, x = eyehead, color = task), position = position_dodge(.2)) +
geom_crossbar(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax), width = .2, position = position_dodge(.2)) +
xlab("") + ylab("Average vertical speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% split(.$dim) %>%
map(~ lmer(speed ~ eyehead*task + (1|id),data = .)) %>%
map(anova)
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_point(data = filter(dsl, dim == "x"), aes(y = speed, x = eyehead, color = task), position = position_dodge(.2)) +
geom_crossbar(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax), width = .2, position = position_dodge(.2)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "y") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_point(data = filter(dsl, dim == "y"), aes(y = speed, x = eyehead, color = task), position = position_dodge(.2)) +
geom_crossbar(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax), width = .2, position = position_dodge(.2)) +
xlab("") + ylab("Average vertical speed (deg/s)") +
my_theme + theme(legend.position = "top")
?list.files
old_files <- list.files(pattern = "*.csv", full.names = TRUE)
old_files <- list.files(getwd(), pattern = "*.csv", full.names = TRUE)
getwd
getwd()
setwd("~/Dropbox/imu_classification/16/imu")
old_files <- list.files(pattern = "*.csv", full.names = TRUE)
old_files
new_files <-  old_files
?grep
sub("MM1*Pressure","ankle_press", new_files)
sub("./MM1*Pressure","ankle_press", new_files)
sub("./MM1_************************************_Pressure","ankle_press", new_files)
sub("./MM1_**********************************_Pressure","ankle_press", new_files)
sub("./MM1_*_Pressure","ankle_press", new_files)
sub("./MM1_*_Pressure*","./ankle_press.csv", new_files)
sub("./MM1_*_Pressure.csv","./ankle_press.csv", new_files)
sub("./MM1_*_Pressure.csv","./ankle_press.csv", new_files(1))
sub("./MM1_*_Pressure.csv","./ankle_press.csv", new_files(1))
sub("./MM1_*_Pressure.csv","./ankle_press.csv", new_files[1]
sub("./MM1_*_Pressure.csv","./ankle_press.csv", new_files[1])
sub("MM1",".ankle", new_files)
sub("MM1","ankle", new_files)
sub("MM1*","ankle", new_files)
sub(".*MM1.*Pressure.csv","ankle_press.csv", new_files)
sub("MM1.*Pressure","ankle_press", new_files)
sub("MM1.*Pressure","ankle_press", new_files)
sub("MM1.*Accelerometer","ankle_acc", new_files)
sub("MM1.*Gyroscope","ankle_gyro", new_files)
new_files <- sub("MM1.*Pressure","ankle_press", new_files)
new_files <- sub("MM1.*Accelerometer","ankle_acc", new_files)
new_files <- sub("MM1.*Gyroscope","ankle_gyro", new_files)
new_files
setwd("~/Dropbox/imu_classification/16")
?file.rename
old_files <- list.files(pattern = "*.csv", full.names = TRUE)
new_files <-  old_files
new_files <- sub("MM1.*Pressure","ankle_press", new_files)
new_files <- sub("MM1.*Accelerometer","ankle_acc", new_files)
new_files <- sub("MM1.*Gyroscope","ankle_gyro", new_files)
new_files <- sub("MM2.*Pressure","thigh_press", new_files)
new_files <- sub("MM2.*Accelerometer","thigh_acc", new_files)
new_files <- sub("MM2.*Gyroscope","thigh_gyro", new_files)
new_files <- sub("MM3.*Pressure","hip_press", new_files)
new_files <- sub("MM3.*Accelerometer","hip_acc", new_files)
new_files <- sub("MM3.*Gyroscope","hip_gyro", new_files)
file.rename(from = old_files, to = new_files)
file.rename(from = old_files, to = new_files)
setwd("~/Dropbox/imu_classification/17")
old_files <- list.files(pattern = "*.csv", full.names = TRUE)
new_files <-  old_files
new_files <- sub("MM1.*Pressure","ankle_press", new_files)
new_files <- sub("MM1.*Accelerometer","ankle_acc", new_files)
new_files <- sub("MM1.*Gyroscope","ankle_gyro", new_files)
new_files <- sub("MM2.*Pressure","thigh_press", new_files)
new_files <- sub("MM2.*Accelerometer","thigh_acc", new_files)
new_files <- sub("MM2.*Gyroscope","thigh_gyro", new_files)
new_files <- sub("MM3.*Pressure","hip_press", new_files)
new_files <- sub("MM3.*Accelerometer","hip_acc", new_files)
new_files <- sub("MM3.*Gyroscope","hip_gyro", new_files)
file.rename(from = old_files, to = new_files)
setwd("~/Dropbox/imu_classification/18")
setwd("~/Dropbox/imu_classification/18")
old_files <- list.files(pattern = "*.csv", full.names = TRUE)
new_files <-  old_files
new_files <- sub("MM1.*Pressure","ankle_press", new_files)
new_files <- sub("MM1.*Accelerometer","ankle_acc", new_files)
new_files <- sub("MM1.*Gyroscope","ankle_gyro", new_files)
new_files <- sub("MM2.*Pressure","thigh_press", new_files)
new_files <- sub("MM2.*Accelerometer","thigh_acc", new_files)
new_files <- sub("MM2.*Gyroscope","thigh_gyro", new_files)
new_files <- sub("MM3.*Pressure","hip_press", new_files)
new_files <- sub("MM3.*Accelerometer","hip_acc", new_files)
new_files <- sub("MM3.*Gyroscope","hip_gyro", new_files)
file.rename(from = old_files, to = new_files)
setwd("~/Dropbox/imu_classification/19")
old_files <- list.files(pattern = "*.csv", full.names = TRUE)
new_files <-  old_files
new_files <- sub("MM1.*Pressure","ankle_press", new_files)
new_files <- sub("MM1.*Accelerometer","ankle_acc", new_files)
new_files <- sub("MM1.*Gyroscope","ankle_gyro", new_files)
new_files <- sub("MM2.*Pressure","thigh_press", new_files)
new_files <- sub("MM2.*Accelerometer","thigh_acc", new_files)
new_files <- sub("MM2.*Gyroscope","thigh_gyro", new_files)
new_files <- sub("MM3.*Pressure","hip_press", new_files)
new_files <- sub("MM3.*Accelerometer","hip_acc", new_files)
new_files <- sub("MM3.*Gyroscope","hip_gyro", new_files)
file.rename(from = old_files, to = new_files)
setwd("~/Dropbox/imu_classification/20")
old_files <- list.files(pattern = "*.csv", full.names = TRUE)
new_files <-  old_files
new_files <- sub("MM1.*Pressure","ankle_press", new_files)
new_files <- sub("MM1.*Accelerometer","ankle_acc", new_files)
new_files <- sub("MM1.*Gyroscope","ankle_gyro", new_files)
new_files <- sub("MM2.*Pressure","thigh_press", new_files)
new_files <- sub("MM2.*Accelerometer","thigh_acc", new_files)
new_files <- sub("MM2.*Gyroscope","thigh_gyro", new_files)
new_files <- sub("MM3.*Pressure","hip_press", new_files)
new_files <- sub("MM3.*Accelerometer","hip_acc", new_files)
new_files <- sub("MM3.*Gyroscope","hip_gyro", new_files)
file.rename(from = old_files, to = new_files)
setwd("~/Dropbox/imu_classification/21")
old_files <- list.files(pattern = "*.csv", full.names = TRUE)
new_files <-  old_files
new_files <- sub("MM1.*Pressure","ankle_press", new_files)
new_files <- sub("MM1.*Accelerometer","ankle_acc", new_files)
new_files <- sub("MM1.*Gyroscope","ankle_gyro", new_files)
new_files <- sub("MM2.*Pressure","thigh_press", new_files)
new_files <- sub("MM2.*Accelerometer","thigh_acc", new_files)
new_files <- sub("MM2.*Gyroscope","thigh_gyro", new_files)
new_files <- sub("MM3.*Pressure","hip_press", new_files)
new_files <- sub("MM3.*Accelerometer","hip_acc", new_files)
new_files <- sub("MM3.*Gyroscope","hip_gyro", new_files)
file.rename(from = old_files, to = new_files)
